def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "spboot-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
pipeline {
 agent none
 tools {
    	maven 'Maven'
 }
 stages {
  stage("Checkout"){
   agent any
   steps{
     checkout scm
     //sh 'mvn clean test'
    
    // test
   }
   
  }
  
  stage("Tests") {
   agent any
   steps {
    checkout scm
    sh 'mvn clean test'
    step([$class: 'Publisher', reportFilenamePattern: '**/testng-results.xml'])
    snDevOpsArtifact(artifactsPayload:"""{"artifacts": [{"name": "devops_scripted_demo.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "devops_scripted_demo"}],"stageName": "Tests"}""") 
    snDevOpsPackage(name: "sentimentpackage", artifactsPayload: """{"artifacts": [{"name": "devops_scripted_demo.jar","repositoryName": "devops_scripted_demo","version":"${version}"}]}""")
   }
  }
  stage('Deploy'){
   agent any
   steps{
     snDevOpsChange(	changeRequestDetails: """ {
	"setCloseCode": true,
	"attributes": {
		"description": "DevOps test ",
		"priority": "5",
		"short_description": "Use the DevOps Servicenow",
		"requested_by": {
			"email": "abel.tuter@example.com"
		},
		"start_date": "2021-02-05 08:00:00",
		"end_date": "2021-02-15 08:00:00",
		"cab_required": true,
		"cab_delegate": {
			"name": "Andrew Och"
		},
		"justification": "Connect your planning ",
		"implementation_plan": "Test implementation plan",
		"backout_plan": "backout plan if ",
		"test_plan": "Test plan to test the tests which test the test-now application",
		"type":"normal"
	}
} """
)     
   }
  }
 }
}
